/*

M = P [ i(1 + i)^n ] / [ (1 + i)^n – 1]
let M;
let P: number; // lånebeloppet
let i: number; // den månatliga räntesatsen (den årliga räntesatsen dividerad med 12)
let n = 30 * 12; // det totala antalet månadsbetalningar (lånetiden i år multiplicerat med 12).



console.log(M);

function monthlyPayment(p: number, n: number, i: number) {
    return p * i * (Math.pow(1 + i, n)) / (Math.pow(1 + i, n) - 1);
    
}
// m = monthlyPayment(p, n, i);

*/ 

/**
 * var M; //monthly mortgage payment
var P = 400000; //principle / initial amount borrowed
var I = 3.5 / 100 / 12; //monthly interest rate
var N = 30 * 12; //number of payments months

//monthly mortgage payment
M = monthlyPayment(P, N, I);

console.log(M);

function monthlyPayment(p, n, i) {
  return p * i * (Math.pow(1 + i, n)) / (Math.pow(1 + i, n) - 1);
}
 */